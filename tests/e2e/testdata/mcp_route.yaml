# Copyright Envoy AI Gateway Authors
# SPDX-License-Identifier: Apache-2.0
# The full text of the Apache license is available in the LICENSE file at
# the root of the repo.

apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: mcp-gateway-class
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: mcp-gateway
  namespace: default
spec:
  gatewayClassName: mcp-gateway-class
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      allowedRoutes:  # This allows us to test MCPRoutes from multiple namespaces.
        namespaces:
          from: All
  infrastructure:
    parametersRef:
      group: gateway.envoyproxy.io
      kind: EnvoyProxy
      name: mcp-envoyproxy
---
apiVersion: aigateway.envoyproxy.io/v1alpha1
kind: MCPRoute
metadata:
  name: mcp-default-route
  namespace: default
spec:
  path: "/mcp"
  parentRefs:
    - name: mcp-gateway
      kind: Gateway
      group: gateway.networking.k8s.io
  backendRefs:
    - name: mcp-backend
      port: 1063
      securityPolicy:
        apiKey:
          inline: "test-api-key"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-backend
  template:
    metadata:
      labels:
        app: mcp-backend
    spec:
      containers:
        - name: mcp-backend
          image: docker.io/envoyproxy/ai-gateway-testmcpserver:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1063
          env:
            - name: TEST_API_KEY
              value: "test-api-key"
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-backend
  namespace: default
spec:
  selector:
    app: mcp-backend
  ports:
    - protocol: TCP
      port: 1063
      targetPort: 1063
  type: ClusterIP

---
apiVersion: v1
kind: Namespace
metadata:
  name: mcp-tenant
---
apiVersion: aigateway.envoyproxy.io/v1alpha1
kind: MCPRoute
metadata:
  name: mcp-tenant-route
  namespace: mcp-tenant
spec:
  parentRefs:
    - name: mcp-gateway
      kind: Gateway
      group: gateway.networking.k8s.io
      namespace: default
  headers:
    - name: x-tenant
      value: tenant-a
      type: Exact
  backendRefs:
    - name: mcp-backend-tenant
      namespace: mcp-tenant
      port: 1063
      securityPolicy:
        apiKey:
          inline: "another-test-api-key-in-different-namespace"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-backend-tenant
  namespace: mcp-tenant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-backend-tenant
  template:
    metadata:
      labels:
        app: mcp-backend-tenant
    spec:
      containers:
        - name: mcp-backend-tenant
          image: docker.io/envoyproxy/ai-gateway-testmcpserver:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1063
          env:
            - name: TEST_API_KEY
              value: "another-test-api-key-in-different-namespace"
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-backend-tenant
  namespace: mcp-tenant
spec:
  selector:
    app: mcp-backend-tenant
  ports:
    - protocol: TCP
      port: 1063
      targetPort: 1063
  type: ClusterIP

---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: mcp-envoyproxy
  namespace: default
spec:
  provider:
    type: Kubernetes
    kubernetes:
      envoyDeployment:
        container:
          # Clear the default memory/cpu requirements for local tests.
          resources: {}
---
apiVersion: aigateway.envoyproxy.io/v1alpha1
kind: MCPRoute
metadata:
  name: mcp-tenant-route-with-path
  namespace: default
spec:
  path: "/mcp/another"
  parentRefs:
    - name: mcp-gateway
      kind: Gateway
      group: gateway.networking.k8s.io
      namespace: default
  backendRefs:
    - name: mcp-backend
      port: 1063
      securityPolicy:
        apiKey:
          inline: "test-api-key"
      toolSelector:
        include:
          - sum
---
apiVersion: aigateway.envoyproxy.io/v1alpha1
kind: MCPRoute
metadata:
  name: mcp-tenant-route-with-top-level-path
  namespace: default
spec:
  path: "/mcp-top-level-different-path"
  parentRefs:
    - name: mcp-gateway
      kind: Gateway
      group: gateway.networking.k8s.io
      namespace: default
  backendRefs:
    - name: mcp-backend
      port: 1063
      securityPolicy:
        apiKey:
          inline: "test-api-key"
      toolSelector:
        include:
          - echo
---
apiVersion: aigateway.envoyproxy.io/v1alpha1
kind: MCPRoute
metadata:
  name: mcp-invalid-api-key-route
  namespace: default
spec:
  path: "/mcp/invalid"
  parentRefs:
    - name: mcp-gateway
      kind: Gateway
      group: gateway.networking.k8s.io
      namespace: default
  backendRefs:
    - name: mcp-backend
      port: 1063
      securityPolicy:
        apiKey:
          inline: "invalid-api-key"

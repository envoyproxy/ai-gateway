// Copyright Envoy AI Gateway Authors
// SPDX-License-Identifier: Apache-2.0
// The full text of the Apache license is available in the LICENSE file at
// the root of the repo.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/envoyproxy/ai-gateway/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// AIServiceBackendLister helps list AIServiceBackends.
// All objects returned here must be treated as read-only.
type AIServiceBackendLister interface {
	// List lists all AIServiceBackends in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.AIServiceBackend, err error)
	// AIServiceBackends returns an object that can list and get AIServiceBackends.
	AIServiceBackends(namespace string) AIServiceBackendNamespaceLister
	AIServiceBackendListerExpansion
}

// aIServiceBackendLister implements the AIServiceBackendLister interface.
type aIServiceBackendLister struct {
	listers.ResourceIndexer[*apiv1alpha1.AIServiceBackend]
}

// NewAIServiceBackendLister returns a new AIServiceBackendLister.
func NewAIServiceBackendLister(indexer cache.Indexer) AIServiceBackendLister {
	return &aIServiceBackendLister{listers.New[*apiv1alpha1.AIServiceBackend](indexer, apiv1alpha1.Resource("aiservicebackend"))}
}

// AIServiceBackends returns an object that can list and get AIServiceBackends.
func (s *aIServiceBackendLister) AIServiceBackends(namespace string) AIServiceBackendNamespaceLister {
	return aIServiceBackendNamespaceLister{listers.NewNamespaced[*apiv1alpha1.AIServiceBackend](s.ResourceIndexer, namespace)}
}

// AIServiceBackendNamespaceLister helps list and get AIServiceBackends.
// All objects returned here must be treated as read-only.
type AIServiceBackendNamespaceLister interface {
	// List lists all AIServiceBackends in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.AIServiceBackend, err error)
	// Get retrieves the AIServiceBackend from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.AIServiceBackend, error)
	AIServiceBackendNamespaceListerExpansion
}

// aIServiceBackendNamespaceLister implements the AIServiceBackendNamespaceLister
// interface.
type aIServiceBackendNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.AIServiceBackend]
}

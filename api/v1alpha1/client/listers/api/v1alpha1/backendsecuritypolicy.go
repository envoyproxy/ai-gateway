// Copyright Envoy AI Gateway Authors
// SPDX-License-Identifier: Apache-2.0
// The full text of the Apache license is available in the LICENSE file at
// the root of the repo.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/envoyproxy/ai-gateway/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// BackendSecurityPolicyLister helps list BackendSecurityPolicies.
// All objects returned here must be treated as read-only.
type BackendSecurityPolicyLister interface {
	// List lists all BackendSecurityPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.BackendSecurityPolicy, err error)
	// BackendSecurityPolicies returns an object that can list and get BackendSecurityPolicies.
	BackendSecurityPolicies(namespace string) BackendSecurityPolicyNamespaceLister
	BackendSecurityPolicyListerExpansion
}

// backendSecurityPolicyLister implements the BackendSecurityPolicyLister interface.
type backendSecurityPolicyLister struct {
	listers.ResourceIndexer[*apiv1alpha1.BackendSecurityPolicy]
}

// NewBackendSecurityPolicyLister returns a new BackendSecurityPolicyLister.
func NewBackendSecurityPolicyLister(indexer cache.Indexer) BackendSecurityPolicyLister {
	return &backendSecurityPolicyLister{listers.New[*apiv1alpha1.BackendSecurityPolicy](indexer, apiv1alpha1.Resource("backendsecuritypolicy"))}
}

// BackendSecurityPolicies returns an object that can list and get BackendSecurityPolicies.
func (s *backendSecurityPolicyLister) BackendSecurityPolicies(namespace string) BackendSecurityPolicyNamespaceLister {
	return backendSecurityPolicyNamespaceLister{listers.NewNamespaced[*apiv1alpha1.BackendSecurityPolicy](s.ResourceIndexer, namespace)}
}

// BackendSecurityPolicyNamespaceLister helps list and get BackendSecurityPolicies.
// All objects returned here must be treated as read-only.
type BackendSecurityPolicyNamespaceLister interface {
	// List lists all BackendSecurityPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.BackendSecurityPolicy, err error)
	// Get retrieves the BackendSecurityPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.BackendSecurityPolicy, error)
	BackendSecurityPolicyNamespaceListerExpansion
}

// backendSecurityPolicyNamespaceLister implements the BackendSecurityPolicyNamespaceLister
// interface.
type backendSecurityPolicyNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.BackendSecurityPolicy]
}

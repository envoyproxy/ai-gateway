# Copyright Envoy AI Gateway Authors
# SPDX-License-Identifier: Apache-2.0
# The full text of the Apache license is available in the LICENSE file at
# the root of the repo.

# This example demonstrates Azure OpenAI integration using Managed Identity authentication.
#
# Prerequisites for AKS Workload Identity:
# 1. Enable OIDC Issuer and Workload Identity on your AKS cluster
# 2. Create a User-Assigned Managed Identity in Azure
# 3. Grant the Managed Identity "Cognitive Services OpenAI User" role on your Azure OpenAI resource
# 4. Create a federated identity credential associating the managed identity with your Kubernetes service account
# 5. Annotate your Kubernetes service account with the managed identity client ID
#
# Example service account:
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: ai-gateway-sa
#   namespace: envoy-gateway-system
#   annotations:
#     azure.workload.identity/client-id: "YOUR_USER_ASSIGNED_IDENTITY_CLIENT_ID"
#
# Then configure your gateway deployment to use this service account.

---
apiVersion: aigateway.envoyproxy.io/v1alpha1
kind: AIGatewayRoute
metadata:
  name: envoy-ai-gateway-basic-azure-mi
  namespace: default
spec:
  parentRefs:
    - name: envoy-ai-gateway-basic
      kind: Gateway
      group: gateway.networking.k8s.io
  rules:
    - matches:
        - headers:
            - type: Exact
              name: x-ai-eg-model
              value: gpt-4o-preview
      backendRefs:
        - name: envoy-ai-gateway-basic-azure-mi
---
apiVersion: aigateway.envoyproxy.io/v1alpha1
kind: AIServiceBackend
metadata:
  name: envoy-ai-gateway-basic-azure-mi
  namespace: default
spec:
  schema:
    name: AzureOpenAI
    version: 2025-01-01-preview
  backendRef:
    name: envoy-ai-gateway-basic-azure-mi
    kind: Backend
    group: gateway.envoyproxy.io
---
# User-Assigned Managed Identity Example
apiVersion: aigateway.envoyproxy.io/v1alpha1
kind: BackendSecurityPolicy
metadata:
  name: envoy-ai-gateway-basic-azure-mi-credentials
  namespace: default
spec:
  targetRefs:
    - group: aigateway.envoyproxy.io
      kind: AIServiceBackend
      name: envoy-ai-gateway-basic-azure-mi
  type: AzureCredentials
  azureCredentials:
    clientID: YOUR_USER_ASSIGNED_IDENTITY_CLIENT_ID   # Replace with your User-Assigned Managed Identity Client ID
    tenantID: YOUR_AZURE_TENANT_ID                    # Replace with your Azure Tenant ID
    useManagedIdentity: true
---
# Alternative: System-Assigned Managed Identity Example (uncomment and use instead of above)
# apiVersion: aigateway.envoyproxy.io/v1alpha1
# kind: BackendSecurityPolicy
# metadata:
#   name: envoy-ai-gateway-basic-azure-mi-credentials
#   namespace: default
# spec:
#   targetRefs:
#     - group: aigateway.envoyproxy.io
#       kind: AIServiceBackend
#       name: envoy-ai-gateway-basic-azure-mi
#   type: AzureCredentials
#   azureCredentials:
#     # No clientID specified for system-assigned managed identity
#     tenantID: YOUR_AZURE_TENANT_ID                  # Replace with your Azure Tenant ID
#     useManagedIdentity: true
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: Backend
metadata:
  name: envoy-ai-gateway-basic-azure-mi
  namespace: default
spec:
  endpoints:
    - fqdn:
        hostname: your-azure-openai-resource.openai.azure.com  # Replace with your Azure OpenAI resource
        port: 443
---
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: envoy-ai-gateway-basic-azure-mi-tls
  namespace: default
spec:
  targetRefs:
    - group: 'gateway.envoyproxy.io'
      kind: Backend
      name: envoy-ai-gateway-basic-azure-mi
  validation:
    wellKnownCACertificates: "System"
    hostname: your-azure-openai-resource.openai.azure.com  # Replace with your Azure OpenAI resource

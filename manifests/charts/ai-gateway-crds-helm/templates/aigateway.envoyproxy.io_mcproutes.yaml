# Copyright Envoy AI Gateway Authors
# SPDX-License-Identifier: Apache-2.0
# The full text of the Apache license is available in the LICENSE file at
# the root of the repo.

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: mcproutes.aigateway.envoyproxy.io
spec:
  group: aigateway.envoyproxy.io
  names:
    kind: MCPRoute
    listKind: MCPRouteList
    plural: mcproutes
    singular: mcproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[-1:].type
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          MCPRoute defines how to route MCP requests to the backend MCP servers.

          This serves as a way to define a "unified" AI API for a Gateway which allows downstream
          clients to use a single schema API to interact with multiple MCP backends.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the details of the MCPRoute.
            properties:
              backendRefs:
                description: |-
                  BackendRefs is a list of backend references to the MCP servers.
                  These MCP servers will be aggregated and exposed as a single MCP endpoint to the clients.
                  From the client's perspective, they only need to configure a single MCP server URL, e.g. "https://api.example.com/mcp",
                  and the Envoy AI Gateway will route the requests to the appropriate MCP server based on the requests.

                  All names must be unique within this list to avoid potential tools, resources, etc. name collisions.
                  Also, cross-namespace references are not supported. In other words, the backend MCP servers must be in the
                  same namespace as the MCPRoute.
                items:
                  description: MCPRouteBackendRef wraps a EG's BackendObjectReference
                    to reference an MCP server.
                  properties:
                    group:
                      default: ""
                      description: |-
                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                        When unspecified or empty string, core API group is inferred.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Service
                      description: |-
                        Kind is the Kubernetes resource kind of the referent. For example
                        "Service".

                        Defaults to "Service" when not specified.

                        ExternalName services can refer to CNAME DNS records that may live
                        outside of the cluster and as such are difficult to reason about in
                        terms of conformance. They also may not be safe to forward to (see
                        CVE-2021-25740 for more information). Implementations SHOULD NOT
                        support ExternalName Services.

                        Support: Core (Services with a type other than ExternalName)

                        Support: Implementation-specific (Services with type ExternalName)
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the backend. When unspecified, the local
                        namespace is inferred.

                        Note that when a namespace different than the local namespace is specified,
                        a ReferenceGrant object is required in the referent namespace to allow that
                        namespace's owner to accept the reference. See the ReferenceGrant
                        documentation for details.

                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    path:
                      default: /mcp
                      description: |-
                        Path is the HTTP endpoint path of the baackend MCP server.
                        If not specified, the default is "/mcp".
                      maxLength: 1024
                      type: string
                    port:
                      description: |-
                        Port specifies the destination port number to use for this resource.
                        Port is required when the referent is a Kubernetes Service. In this
                        case, the port number is the service port number, not the target port.
                        For other resources, destination port might be derived from the referent
                        resource or this field.
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    securityPolicy:
                      description: SecurityPolicy is the security policy to apply
                        to this MCP server.
                      properties:
                        apiKey:
                          description: APIKey is a mechanism to access a backend.
                            The API key will be injected into the request headers.
                          properties:
                            header:
                              description: |-
                                Header is the HTTP header to inject the API key into. If not specified,
                                defaults to "Authorization".
                                When the header is "Authorization", the injected header value will be
                                prefixed with "Bearer ".
                              minLength: 1
                              type: string
                            inline:
                              description: Inline contains the API key as an inline
                                string.
                              type: string
                            secretRef:
                              description: |-
                                secretRef is the Kubernetes secret which contains the API keys.
                                The key of the secret should be "apiKey".
                              properties:
                                group:
                                  default: ""
                                  description: |-
                                    Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                    When unspecified or empty string, core API group is inferred.
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                kind:
                                  default: Secret
                                  description: Kind is kind of the referent. For example
                                    "Secret".
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                  type: string
                                name:
                                  description: Name is the name of the referent.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace is the namespace of the referenced object. When unspecified, the local
                                    namespace is inferred.

                                    Note that when a namespace different than the local namespace is specified,
                                    a ReferenceGrant object is required in the referent namespace to allow that
                                    namespace's owner to accept the reference. See the ReferenceGrant
                                    documentation for details.

                                    Support: Core
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                          x-kubernetes-validations:
                          - message: exactly one of secretRef or inline must be set
                            rule: (has(self.secretRef) && !has(self.inline)) || (!has(self.secretRef)
                              && has(self.inline))
                      type: object
                    toolSelector:
                      description: |-
                        ToolSelector filters the tools exposed by this MCP server.
                        Supports exact matches and RE2-compatible regular expressions for both include and exclude patterns.
                        If not specified, all tools from the MCP server are exposed.
                      properties:
                        include:
                          description: Include is a list of tool names to include.
                            Only the specified tools will be available.
                          items:
                            type: string
                          maxItems: 32
                          type: array
                        includeRegex:
                          description: |-
                            IncludeRegex is a list of RE2-compatible regular expressions that, when matched, include the tool.
                            Only tools matching these patterns will be available.
                          items:
                            type: string
                          maxItems: 32
                          type: array
                      type: object
                      x-kubernetes-validations:
                      - message: exactly one of include or includeRegex must be specified
                        rule: (has(self.include) && !has(self.includeRegex)) || (!has(self.include)
                          && has(self.includeRegex))
                  required:
                  - name
                  type: object
                  x-kubernetes-validations:
                  - message: Must have port for Service reference
                    rule: '(size(self.group) == 0 && self.kind == ''Service'') ? has(self.port)
                      : true'
                maxItems: 256
                minItems: 1
                type: array
                x-kubernetes-validations:
                - message: all backendRefs names must be unique
                  rule: self.all(i, self.exists_one(j, j.name == i.name))
              headers:
                description: |-
                  Headers are HTTP headers that must match for this route to be selected.
                  Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
                items:
                  description: |-
                    HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                    headers.
                  properties:
                    name:
                      description: |-
                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                        case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                        If multiple entries specify equivalent header names, only the first
                        entry with an equivalent name MUST be considered for a match. Subsequent
                        entries with an equivalent header name MUST be ignored. Due to the
                        case-insensitivity of header names, "foo" and "Foo" are considered
                        equivalent.

                        When a header is repeated in an HTTP request, it is
                        implementation-specific behavior as to how this is represented.
                        Generally, proxies should follow the guidance from the RFC:
                        https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                        processing a repeated header, with special handling for "Set-Cookie".
                      maxLength: 256
                      minLength: 1
                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                      type: string
                    type:
                      default: Exact
                      description: |-
                        Type specifies how to match against the value of the header.

                        Support: Core (Exact)

                        Support: Implementation-specific (RegularExpression)

                        Since RegularExpression HeaderMatchType has implementation-specific
                        conformance, implementations can support POSIX, PCRE or any other dialects
                        of regular expressions. Please read the implementation's documentation to
                        determine the supported dialect.
                      enum:
                      - Exact
                      - RegularExpression
                      type: string
                    value:
                      description: Value is the value of HTTP Header to be matched.
                      maxLength: 4096
                      minLength: 1
                      type: string
                  required:
                  - name
                  - value
                  type: object
                maxItems: 16
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              parentRefs:
                description: |-
                  ParentRefs are the names of the Gateway resources this MCPRoute is being attached to.
                  Cross namespace references are not supported. In other words, the Gateway resources must be in the
                  same namespace as the MCPRoute. Currently, each reference's Kind must be Gateway.
                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:

                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)

                    This API may be extended in the future to support additional kinds of parent
                    resources.

                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).

                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.

                        There are two kinds of parent resources with "Core" support:

                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)

                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.

                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.

                        <gateway:experimental:description>
                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.

                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.
                        </gateway:experimental:description>

                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.

                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.

                        <gateway:experimental:description>
                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.
                        </gateway:experimental:description>

                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.

                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.

                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:

                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.

                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.

                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 16
                minItems: 1
                type: array
                x-kubernetes-validations:
                - message: only Gateway is supported
                  rule: self.all(match, match.kind == 'Gateway')
              path:
                default: /mcp
                description: |-
                  Path is the HTTP endpoint path that serves MCP requests over the Streamable HTTP transport.
                  If not specified, the default is "/mcp".
                maxLength: 1024
                type: string
              securityPolicy:
                description: SecurityPolicy defines the security policy for this MCPRoute.
                properties:
                  apiKeyAuth:
                    description: APIKeyAuth defines the configuration for the API
                      Key Authentication.
                    properties:
                      credentialRefs:
                        description: |-
                          CredentialRefs is the Kubernetes secret which contains the API keys.
                          This is an Opaque secret.
                          Each API key is stored in the key representing the client id.
                          If the secrets have a key for a duplicated client, the first one will be used.
                        items:
                          description: |-
                            SecretObjectReference identifies an API object including its namespace,
                            defaulting to Secret.

                            The API object must be valid in the cluster; the Group and Kind must
                            be registered in the cluster for this reference to be valid.

                            References to objects with invalid Group and Kind are not valid, and must
                            be rejected by the implementation, with appropriate Conditions set
                            on the containing object.
                          properties:
                            group:
                              default: ""
                              description: |-
                                Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                When unspecified or empty string, core API group is inferred.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              default: Secret
                              description: Kind is kind of the referent. For example
                                "Secret".
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            name:
                              description: Name is the name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: |-
                                Namespace is the namespace of the referenced object. When unspecified, the local
                                namespace is inferred.

                                Note that when a namespace different than the local namespace is specified,
                                a ReferenceGrant object is required in the referent namespace to allow that
                                namespace's owner to accept the reference. See the ReferenceGrant
                                documentation for details.

                                Support: Core
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      extractFrom:
                        description: |-
                          ExtractFrom is where to fetch the key from the coming request.
                          The value from the first source that has a key will be used.
                        items:
                          description: |-
                            ExtractFrom is where to fetch the key from the coming request.
                            Only one of header, param or cookie is supposed to be specified.
                          properties:
                            cookies:
                              description: |-
                                Cookies is the names of the cookie to fetch the key from.
                                If multiple cookies are specified, envoy will look for the api key in the order of the list.
                                This field is optional, but only one of headers, params or cookies is supposed to be specified.
                              items:
                                type: string
                              type: array
                            headers:
                              description: |-
                                Headers is the names of the header to fetch the key from.
                                If multiple headers are specified, envoy will look for the api key in the order of the list.
                                This field is optional, but only one of headers, params or cookies is supposed to be specified.
                              items:
                                type: string
                              type: array
                            params:
                              description: |-
                                Params is the names of the query parameter to fetch the key from.
                                If multiple params are specified, envoy will look for the api key in the order of the list.
                                This field is optional, but only one of headers, params or cookies is supposed to be specified.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      forwardClientIDHeader:
                        description: |-
                          ForwardClientIDHeader is the name of the header to forward the client identity to the backend
                          service. The header will be added to the request with the client id as the value.
                        type: string
                      sanitize:
                        description: Sanitize indicates whether to remove the API
                          key from the request before forwarding it to the backend
                          service.
                        type: boolean
                    required:
                    - credentialRefs
                    - extractFrom
                    type: object
                  oauth:
                    description: OAuth defines the configuration for the MCP spec
                      compatible OAuth authentication.
                    properties:
                      audiences:
                        description: |-
                          Audiences is a list of JWT audiences allowed access.
                          It is recommended to set this field for token audience validation, as it is a security best practice to prevent token misuse.
                          Reference: https://modelcontextprotocol.io/specification/2025-06-18/basic/authorization#token-audience-binding-and-validation
                        items:
                          type: string
                        maxItems: 32
                        type: array
                      issuer:
                        description: Issuer is the authorization server's issuer identity.
                        format: uri
                        type: string
                      jwks:
                        description: |-
                          JWKS defines how a JSON Web Key Sets (JWKS) can be obtained to verify the access tokens presented by the clients.

                          If not specified, the JWKS URI will be discovered from the OAuth 2.0 Authorization Server Metadata
                          as per RFC 8414 by querying the `/.well-known/oauth-authorization-server` endpoint on the Issuer.
                        properties:
                          localJWKS:
                            description: LocalJWKS defines how to get the JSON Web
                              Key Sets (JWKS) from a local source.
                            properties:
                              inline:
                                description: Inline contains the value as an inline
                                  string.
                                type: string
                              type:
                                default: Inline
                                description: |-
                                  Type is the type of method to use to read the body value.
                                  Valid values are Inline and ValueRef, default is Inline.
                                enum:
                                - Inline
                                - ValueRef
                                type: string
                              valueRef:
                                description: |-
                                  ValueRef is a reference to a local ConfigMap that contains the JSON Web Key Sets (JWKS).

                                  The value of key `jwks` in the ConfigMap will be used.
                                  If the key is not found, the first value in the ConfigMap will be used.
                                properties:
                                  group:
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    description: Kind is kind of the referent. For
                                      example "HTTPRoute" or "Service".
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                required:
                                - group
                                - kind
                                - name
                                type: object
                            required:
                            - type
                            type: object
                            x-kubernetes-validations:
                            - message: Exactly one of inline or valueRef must be set
                                with correct type.
                              rule: (self.type == 'Inline' && has(self.inline) &&
                                !has(self.valueRef)) || (self.type == 'ValueRef' &&
                                !has(self.inline) && has(self.valueRef))
                          remoteJWKS:
                            description: |-
                              RemoteJWKS defines how to fetch and cache JSON Web Key Sets (JWKS) from a remote
                              HTTP/HTTPS endpoint.
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a Kubernetes object that represents the
                                  backend server to which the authorization request will be sent.

                                  Deprecated: Use BackendRefs instead.
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".

                                      Defaults to "Service" when not specified.

                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.

                                      Support: Core (Services with a type other than ExternalName)

                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.

                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.

                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                              backendRefs:
                                description: |-
                                  BackendRefs references a Kubernetes object that represents the
                                  backend server to which the authorization request will be sent.
                                items:
                                  description: BackendRef defines how an ObjectReference
                                    that is specific to BackendRef.
                                  properties:
                                    fallback:
                                      description: |-
                                        Fallback indicates whether the backend is designated as a fallback.
                                        Multiple fallback backends can be configured.
                                        It is highly recommended to configure active or passive health checks to ensure that failover can be detected
                                        when the active backends become unhealthy and to automatically readjust once the primary backends are healthy again.
                                        The overprovisioning factor is set to 1.4, meaning the fallback backends will only start receiving traffic when
                                        the health of the active backends falls below 72%.
                                      type: boolean
                                    group:
                                      default: ""
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: |-
                                        Kind is the Kubernetes resource kind of the referent. For example
                                        "Service".

                                        Defaults to "Service" when not specified.

                                        ExternalName services can refer to CNAME DNS records that may live
                                        outside of the cluster and as such are difficult to reason about in
                                        terms of conformance. They also may not be safe to forward to (see
                                        CVE-2021-25740 for more information). Implementations SHOULD NOT
                                        support ExternalName Services.

                                        Support: Core (Services with a type other than ExternalName)

                                        Support: Implementation-specific (Services with type ExternalName)
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace is the namespace of the backend. When unspecified, the local
                                        namespace is inferred.

                                        Note that when a namespace different than the local namespace is specified,
                                        a ReferenceGrant object is required in the referent namespace to allow that
                                        namespace's owner to accept the reference. See the ReferenceGrant
                                        documentation for details.

                                        Support: Core
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    port:
                                      description: |-
                                        Port specifies the destination port number to use for this resource.
                                        Port is required when the referent is a Kubernetes Service. In this
                                        case, the port number is the service port number, not the target port.
                                        For other resources, destination port might be derived from the referent
                                        resource or this field.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Must have port for Service reference
                                    rule: '(size(self.group) == 0 && self.kind ==
                                      ''Service'') ? has(self.port) : true'
                                maxItems: 16
                                type: array
                              backendSettings:
                                description: |-
                                  BackendSettings holds configuration for managing the connection
                                  to the backend.
                                properties:
                                  circuitBreaker:
                                    description: |-
                                      Circuit Breaker settings for the upstream connections and requests.
                                      If not set, circuit breakers will be enabled with the default thresholds
                                    properties:
                                      maxConnections:
                                        default: 1024
                                        description: The maximum number of connections
                                          that Envoy will establish to the referenced
                                          backend defined within a xRoute rule.
                                        format: int64
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      maxParallelRequests:
                                        default: 1024
                                        description: The maximum number of parallel
                                          requests that Envoy will make to the referenced
                                          backend defined within a xRoute rule.
                                        format: int64
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      maxParallelRetries:
                                        default: 1024
                                        description: The maximum number of parallel
                                          retries that Envoy will make to the referenced
                                          backend defined within a xRoute rule.
                                        format: int64
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      maxPendingRequests:
                                        default: 1024
                                        description: The maximum number of pending
                                          requests that Envoy will queue to the referenced
                                          backend defined within a xRoute rule.
                                        format: int64
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      maxRequestsPerConnection:
                                        description: |-
                                          The maximum number of requests that Envoy will make over a single connection to the referenced backend defined within a xRoute rule.
                                          Default: unlimited.
                                        format: int64
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      perEndpoint:
                                        description: PerEndpoint defines Circuit Breakers
                                          that will apply per-endpoint for an upstream
                                          cluster
                                        properties:
                                          maxConnections:
                                            default: 1024
                                            description: MaxConnections configures
                                              the maximum number of connections that
                                              Envoy will establish per-endpoint to
                                              the referenced backend defined within
                                              a xRoute rule.
                                            format: int64
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                        type: object
                                    type: object
                                  connection:
                                    description: Connection includes backend connection
                                      settings.
                                    properties:
                                      bufferLimit:
                                        allOf:
                                        - pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        - pattern: ^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: |-
                                          BufferLimit Soft limit on size of the cluster’s connections read and write buffers.
                                          BufferLimit applies to connection streaming (maybe non-streaming) channel between processes, it's in user space.
                                          If unspecified, an implementation defined default is applied (32768 bytes).
                                          For example, 20Mi, 1Gi, 256Ki etc.
                                          Note: that when the suffix is not provided, the value is interpreted as bytes.
                                        x-kubernetes-int-or-string: true
                                      preconnect:
                                        description: |-
                                          Preconnect configures proactive upstream connections to reduce latency by establishing
                                          connections before they’re needed and avoiding connection establishment overhead.

                                          If unset, Envoy will fetch connections as needed to serve in-flight requests.
                                        properties:
                                          perEndpointPercent:
                                            description: |-
                                              PerEndpointPercent configures how many additional connections to maintain per
                                              upstream endpoint, useful for high-QPS or latency sensitive services. Expressed as a
                                              percentage of the connections required by active streams
                                              (e.g. 100 = preconnect disabled, 105 = 1.05x connections per-endpoint, 200 = 2.00×).

                                              Allowed value range is between 100-300. When both PerEndpointPercent and
                                              PredictivePercent are set, Envoy ensures both are satisfied (max of the two).
                                            format: int32
                                            maximum: 300
                                            minimum: 100
                                            type: integer
                                          predictivePercent:
                                            description: |-
                                              PredictivePercent configures how many additional connections to maintain
                                              across the cluster by anticipating which upstream endpoint the load balancer
                                              will select next, useful for low-QPS services. Relies on deterministic
                                              loadbalancing and is only supported with Random or RoundRobin.
                                              Expressed as a percentage of the connections required by active streams
                                              (e.g. 100 = 1.0 (no preconnect), 105 = 1.05× connections across the cluster, 200 = 2.00×).

                                              Minimum allowed value is 100. When both PerEndpointPercent and PredictivePercent are
                                              set Envoy ensures both are satisfied per host (max of the two).
                                            format: int32
                                            minimum: 100
                                            type: integer
                                        type: object
                                      socketBufferLimit:
                                        allOf:
                                        - pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        - pattern: ^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: |-
                                          SocketBufferLimit provides configuration for the maximum buffer size in bytes for each socket
                                          to backend.
                                          SocketBufferLimit applies to socket streaming channel between TCP/IP stacks, it's in kernel space.
                                          For example, 20Mi, 1Gi, 256Ki etc.
                                          Note that when the suffix is not provided, the value is interpreted as bytes.
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  dns:
                                    description: DNS includes dns resolution settings.
                                    properties:
                                      dnsRefreshRate:
                                        description: |-
                                          DNSRefreshRate specifies the rate at which DNS records should be refreshed.
                                          Defaults to 30 seconds.
                                        pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                        type: string
                                      lookupFamily:
                                        description: |-
                                          LookupFamily determines how Envoy would resolve DNS for Routes where the backend is specified as a fully qualified domain name (FQDN).
                                          If set, this configuration overrides other defaults.
                                        enum:
                                        - IPv4
                                        - IPv6
                                        - IPv4Preferred
                                        - IPv6Preferred
                                        - IPv4AndIPv6
                                        type: string
                                      respectDnsTtl:
                                        description: |-
                                          RespectDNSTTL indicates whether the DNS Time-To-Live (TTL) should be respected.
                                          If the value is set to true, the DNS refresh rate will be set to the resource record’s TTL.
                                          Defaults to true.
                                        type: boolean
                                    type: object
                                  healthCheck:
                                    description: HealthCheck allows gateway to perform
                                      active health checking on backends.
                                    properties:
                                      active:
                                        description: Active health check configuration
                                        properties:
                                          grpc:
                                            description: |-
                                              GRPC defines the configuration of the GRPC health checker.
                                              It's optional, and can only be used if the specified type is GRPC.
                                            properties:
                                              service:
                                                description: |-
                                                  Service to send in the health check request.
                                                  If this is not specified, then the health check request applies to the entire
                                                  server and not to a specific service.
                                                type: string
                                            type: object
                                          healthyThreshold:
                                            default: 1
                                            description: HealthyThreshold defines
                                              the number of healthy health checks
                                              required before a backend host is marked
                                              healthy.
                                            format: int32
                                            minimum: 1
                                            type: integer
                                          http:
                                            description: |-
                                              HTTP defines the configuration of http health checker.
                                              It's required while the health checker type is HTTP.
                                            properties:
                                              expectedResponse:
                                                description: ExpectedResponse defines
                                                  a list of HTTP expected responses
                                                  to match.
                                                properties:
                                                  binary:
                                                    description: Binary payload base64
                                                      encoded.
                                                    format: byte
                                                    type: string
                                                  text:
                                                    description: Text payload in plain
                                                      text.
                                                    type: string
                                                  type:
                                                    allOf:
                                                    - enum:
                                                      - Text
                                                      - Binary
                                                    - enum:
                                                      - Text
                                                      - Binary
                                                    description: Type defines the
                                                      type of the payload.
                                                    type: string
                                                required:
                                                - type
                                                type: object
                                                x-kubernetes-validations:
                                                - message: If payload type is Text,
                                                    text field needs to be set.
                                                  rule: 'self.type == ''Text'' ? has(self.text)
                                                    : !has(self.text)'
                                                - message: If payload type is Binary,
                                                    binary field needs to be set.
                                                  rule: 'self.type == ''Binary'' ?
                                                    has(self.binary) : !has(self.binary)'
                                              expectedStatuses:
                                                description: |-
                                                  ExpectedStatuses defines a list of HTTP response statuses considered healthy.
                                                  Defaults to 200 only
                                                items:
                                                  description: HTTPStatus defines
                                                    the http status code.
                                                  maximum: 599
                                                  minimum: 100
                                                  type: integer
                                                type: array
                                              hostname:
                                                description: |-
                                                  Hostname defines the HTTP host that will be requested during health checking.
                                                  Default: HTTPRoute or GRPCRoute hostname.
                                                maxLength: 253
                                                minLength: 1
                                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                                type: string
                                              method:
                                                description: |-
                                                  Method defines the HTTP method used for health checking.
                                                  Defaults to GET
                                                type: string
                                              path:
                                                description: Path defines the HTTP
                                                  path that will be requested during
                                                  health checking.
                                                maxLength: 1024
                                                minLength: 1
                                                type: string
                                            required:
                                            - path
                                            type: object
                                          initialJitter:
                                            description: |-
                                              InitialJitter defines the maximum time Envoy will wait before the first health check.
                                              Envoy will randomly select a value between 0 and the initial jitter value.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                          interval:
                                            default: 3s
                                            description: Interval defines the time
                                              between active health checks.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                          tcp:
                                            description: |-
                                              TCP defines the configuration of tcp health checker.
                                              It's required while the health checker type is TCP.
                                            properties:
                                              receive:
                                                description: Receive defines the expected
                                                  response payload.
                                                properties:
                                                  binary:
                                                    description: Binary payload base64
                                                      encoded.
                                                    format: byte
                                                    type: string
                                                  text:
                                                    description: Text payload in plain
                                                      text.
                                                    type: string
                                                  type:
                                                    allOf:
                                                    - enum:
                                                      - Text
                                                      - Binary
                                                    - enum:
                                                      - Text
                                                      - Binary
                                                    description: Type defines the
                                                      type of the payload.
                                                    type: string
                                                required:
                                                - type
                                                type: object
                                                x-kubernetes-validations:
                                                - message: If payload type is Text,
                                                    text field needs to be set.
                                                  rule: 'self.type == ''Text'' ? has(self.text)
                                                    : !has(self.text)'
                                                - message: If payload type is Binary,
                                                    binary field needs to be set.
                                                  rule: 'self.type == ''Binary'' ?
                                                    has(self.binary) : !has(self.binary)'
                                              send:
                                                description: Send defines the request
                                                  payload.
                                                properties:
                                                  binary:
                                                    description: Binary payload base64
                                                      encoded.
                                                    format: byte
                                                    type: string
                                                  text:
                                                    description: Text payload in plain
                                                      text.
                                                    type: string
                                                  type:
                                                    allOf:
                                                    - enum:
                                                      - Text
                                                      - Binary
                                                    - enum:
                                                      - Text
                                                      - Binary
                                                    description: Type defines the
                                                      type of the payload.
                                                    type: string
                                                required:
                                                - type
                                                type: object
                                                x-kubernetes-validations:
                                                - message: If payload type is Text,
                                                    text field needs to be set.
                                                  rule: 'self.type == ''Text'' ? has(self.text)
                                                    : !has(self.text)'
                                                - message: If payload type is Binary,
                                                    binary field needs to be set.
                                                  rule: 'self.type == ''Binary'' ?
                                                    has(self.binary) : !has(self.binary)'
                                            type: object
                                          timeout:
                                            default: 1s
                                            description: Timeout defines the time
                                              to wait for a health check response.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                          type:
                                            allOf:
                                            - enum:
                                              - HTTP
                                              - TCP
                                              - GRPC
                                            - enum:
                                              - HTTP
                                              - TCP
                                              - GRPC
                                            description: Type defines the type of
                                              health checker.
                                            type: string
                                          unhealthyThreshold:
                                            default: 3
                                            description: UnhealthyThreshold defines
                                              the number of unhealthy health checks
                                              required before a backend host is marked
                                              unhealthy.
                                            format: int32
                                            minimum: 1
                                            type: integer
                                        required:
                                        - type
                                        type: object
                                        x-kubernetes-validations:
                                        - message: If Health Checker type is HTTP,
                                            http field needs to be set.
                                          rule: 'self.type == ''HTTP'' ? has(self.http)
                                            : !has(self.http)'
                                        - message: If Health Checker type is TCP,
                                            tcp field needs to be set.
                                          rule: 'self.type == ''TCP'' ? has(self.tcp)
                                            : !has(self.tcp)'
                                        - message: The grpc field can only be set
                                            if the Health Checker type is GRPC.
                                          rule: 'has(self.grpc) ? self.type == ''GRPC''
                                            : true'
                                      panicThreshold:
                                        description: |-
                                          When number of unhealthy endpoints for a backend reaches this threshold
                                          Envoy will disregard health status and balance across all endpoints.
                                          It's designed to prevent a situation in which host failures cascade throughout the cluster
                                          as load increases. If not set, the default value is 50%. To disable panic mode, set value to `0`.
                                        format: int32
                                        maximum: 100
                                        minimum: 0
                                        type: integer
                                      passive:
                                        description: Passive passive check configuration
                                        properties:
                                          baseEjectionTime:
                                            default: 30s
                                            description: BaseEjectionTime defines
                                              the base duration for which a host will
                                              be ejected on consecutive failures.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                          consecutive5XxErrors:
                                            default: 5
                                            description: Consecutive5xxErrors sets
                                              the number of consecutive 5xx errors
                                              triggering ejection.
                                            format: int32
                                            type: integer
                                          consecutiveGatewayErrors:
                                            description: ConsecutiveGatewayErrors
                                              sets the number of consecutive gateway
                                              errors triggering ejection.
                                            format: int32
                                            type: integer
                                          consecutiveLocalOriginFailures:
                                            default: 5
                                            description: |-
                                              ConsecutiveLocalOriginFailures sets the number of consecutive local origin failures triggering ejection.
                                              Parameter takes effect only when split_external_local_origin_errors is set to true.
                                            format: int32
                                            type: integer
                                          failurePercentageThreshold:
                                            description: |-
                                              FailurePercentageThreshold sets the failure percentage threshold for outlier detection.
                                              If the failure percentage of a given host is greater than or equal to this value, it will be ejected.
                                              Defaults to 85.
                                            format: int32
                                            maximum: 100
                                            minimum: 0
                                            type: integer
                                          interval:
                                            default: 3s
                                            description: Interval defines the time
                                              between passive health checks.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                          maxEjectionPercent:
                                            default: 10
                                            description: MaxEjectionPercent sets the
                                              maximum percentage of hosts in a cluster
                                              that can be ejected.
                                            format: int32
                                            type: integer
                                          splitExternalLocalOriginErrors:
                                            default: false
                                            description: SplitExternalLocalOriginErrors
                                              enables splitting of errors between
                                              external and local origin.
                                            type: boolean
                                        type: object
                                    type: object
                                  http2:
                                    description: HTTP2 provides HTTP/2 configuration
                                      for backend connections.
                                    properties:
                                      initialConnectionWindowSize:
                                        allOf:
                                        - pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        - pattern: ^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: |-
                                          InitialConnectionWindowSize sets the initial window size for HTTP/2 connections.
                                          If not set, the default value is 1 MiB.
                                        x-kubernetes-int-or-string: true
                                      initialStreamWindowSize:
                                        allOf:
                                        - pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        - pattern: ^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: |-
                                          InitialStreamWindowSize sets the initial window size for HTTP/2 streams.
                                          If not set, the default value is 64 KiB(64*1024).
                                        x-kubernetes-int-or-string: true
                                      maxConcurrentStreams:
                                        description: |-
                                          MaxConcurrentStreams sets the maximum number of concurrent streams allowed per connection.
                                          If not set, the default value is 100.
                                        format: int32
                                        maximum: 2147483647
                                        minimum: 1
                                        type: integer
                                      onInvalidMessage:
                                        description: |-
                                          OnInvalidMessage determines if Envoy will terminate the connection or just the offending stream in the event of HTTP messaging error
                                          It's recommended for L2 Envoy deployments to set this value to TerminateStream.
                                          https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/level_two
                                          Default: TerminateConnection
                                        type: string
                                    type: object
                                  loadBalancer:
                                    description: |-
                                      LoadBalancer policy to apply when routing traffic from the gateway to
                                      the backend endpoints. Defaults to `LeastRequest`.
                                    properties:
                                      consistentHash:
                                        description: |-
                                          ConsistentHash defines the configuration when the load balancer type is
                                          set to ConsistentHash
                                        properties:
                                          cookie:
                                            description: Cookie configures the cookie
                                              hash policy when the consistent hash
                                              type is set to Cookie.
                                            properties:
                                              attributes:
                                                additionalProperties:
                                                  type: string
                                                description: Additional Attributes
                                                  to set for the generated cookie.
                                                type: object
                                              name:
                                                description: |-
                                                  Name of the cookie to hash.
                                                  If this cookie does not exist in the request, Envoy will generate a cookie and set
                                                  the TTL on the response back to the client based on Layer 4
                                                  attributes of the backend endpoint, to ensure that these future requests
                                                  go to the same backend endpoint. Make sure to set the TTL field for this case.
                                                type: string
                                              ttl:
                                                description: |-
                                                  TTL of the generated cookie if the cookie is not present. This value sets the
                                                  Max-Age attribute value.
                                                pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          header:
                                            description: |-
                                              Header configures the header hash policy when the consistent hash type is set to Header.

                                              Deprecated: use Headers instead
                                            properties:
                                              name:
                                                description: Name of the header to
                                                  hash.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          headers:
                                            description: Headers configures the header
                                              hash policy for each header, when the
                                              consistent hash type is set to Headers.
                                            items:
                                              description: |-
                                                Header defines the header hashing configuration for consistent hash based
                                                load balancing.
                                              properties:
                                                name:
                                                  description: Name of the header
                                                    to hash.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                          tableSize:
                                            default: 65537
                                            description: The table size for consistent
                                              hashing, must be prime number limited
                                              to 5000011.
                                            format: int64
                                            maximum: 5000011
                                            minimum: 2
                                            type: integer
                                          type:
                                            description: |-
                                              ConsistentHashType defines the type of input to hash on. Valid Type values are
                                              "SourceIP",
                                              "Header",
                                              "Headers",
                                              "Cookie".
                                            enum:
                                            - SourceIP
                                            - Header
                                            - Headers
                                            - Cookie
                                            type: string
                                        required:
                                        - type
                                        type: object
                                        x-kubernetes-validations:
                                        - message: If consistent hash type is header,
                                            the header field must be set.
                                          rule: 'self.type == ''Header'' ? has(self.header)
                                            : !has(self.header)'
                                        - message: If consistent hash type is headers,
                                            the headers field must be set.
                                          rule: 'self.type == ''Headers'' ? has(self.headers)
                                            : !has(self.headers)'
                                        - message: If consistent hash type is cookie,
                                            the cookie field must be set.
                                          rule: 'self.type == ''Cookie'' ? has(self.cookie)
                                            : !has(self.cookie)'
                                      endpointOverride:
                                        description: |-
                                          EndpointOverride defines the configuration for endpoint override.
                                          When specified, the load balancer will attempt to route requests to endpoints
                                          based on the override information extracted from request headers or metadata.
                                           If the override endpoints are not available, the configured load balancer policy will be used as fallback.
                                        properties:
                                          extractFrom:
                                            description: ExtractFrom defines the sources
                                              to extract endpoint override information
                                              from.
                                            items:
                                              description: EndpointOverrideExtractFrom
                                                defines a source to extract endpoint
                                                override information from.
                                              properties:
                                                header:
                                                  description: |-
                                                    Header defines the header to get the override endpoint addresses.
                                                    The header value must specify at least one endpoint in `IP:Port` format or multiple endpoints in `IP:Port,IP:Port,...` format.
                                                    For example `10.0.0.5:8080` or `[2600:4040:5204::1574:24ae]:80`.
                                                    The IPv6 address is enclosed in square brackets.
                                                  type: string
                                              type: object
                                            maxItems: 10
                                            minItems: 1
                                            type: array
                                        required:
                                        - extractFrom
                                        type: object
                                      slowStart:
                                        description: |-
                                          SlowStart defines the configuration related to the slow start load balancer policy.
                                          If set, during slow start window, traffic sent to the newly added hosts will gradually increase.
                                          Currently this is only supported for RoundRobin and LeastRequest load balancers
                                        properties:
                                          window:
                                            description: |-
                                              Window defines the duration of the warm up period for newly added host.
                                              During slow start window, traffic sent to the newly added hosts will gradually increase.
                                              Currently only supports linear growth of traffic. For additional details,
                                              see https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#config-cluster-v3-cluster-slowstartconfig
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                        required:
                                        - window
                                        type: object
                                      type:
                                        description: |-
                                          Type decides the type of Load Balancer policy.
                                          Valid LoadBalancerType values are
                                          "ConsistentHash",
                                          "LeastRequest",
                                          "Random",
                                          "RoundRobin".
                                        enum:
                                        - ConsistentHash
                                        - LeastRequest
                                        - Random
                                        - RoundRobin
                                        type: string
                                      zoneAware:
                                        description: ZoneAware defines the configuration
                                          related to the distribution of requests
                                          between locality zones.
                                        properties:
                                          preferLocal:
                                            description: PreferLocalZone configures
                                              zone-aware routing to prefer sending
                                              traffic to the local locality zone.
                                            properties:
                                              force:
                                                description: |-
                                                  ForceLocalZone defines override configuration for forcing all traffic to stay within the local zone instead of the default behavior
                                                  which maintains equal distribution among upstream endpoints while sending as much traffic as possible locally.
                                                properties:
                                                  minEndpointsInZoneThreshold:
                                                    description: |-
                                                      MinEndpointsInZoneThreshold is the minimum number of upstream endpoints in the local zone required to honor the forceLocalZone
                                                      override. This is useful for protecting zones with fewer endpoints.
                                                    format: int32
                                                    type: integer
                                                type: object
                                              minEndpointsThreshold:
                                                description: MinEndpointsThreshold
                                                  is the minimum number of total upstream
                                                  endpoints across all zones required
                                                  to enable zone-aware routing.
                                                format: int64
                                                type: integer
                                              percentageEnabled:
                                                description: Configures percentage
                                                  of requests that will be considered
                                                  for zone aware routing if zone aware
                                                  routing is configured. If not specified,
                                                  Envoy defaults to 100%.
                                                format: int32
                                                maximum: 100
                                                minimum: 0
                                                type: integer
                                            type: object
                                        type: object
                                    required:
                                    - type
                                    type: object
                                    x-kubernetes-validations:
                                    - message: If LoadBalancer type is consistentHash,
                                        consistentHash field needs to be set.
                                      rule: 'self.type == ''ConsistentHash'' ? has(self.consistentHash)
                                        : !has(self.consistentHash)'
                                    - message: Currently SlowStart is only supported
                                        for RoundRobin and LeastRequest load balancers.
                                      rule: 'self.type in [''Random'', ''ConsistentHash'']
                                        ? !has(self.slowStart) : true '
                                    - message: Currently ZoneAware is only supported
                                        for LeastRequest, Random, and RoundRobin load
                                        balancers.
                                      rule: 'self.type == ''ConsistentHash'' ? !has(self.zoneAware)
                                        : true '
                                  proxyProtocol:
                                    description: ProxyProtocol enables the Proxy Protocol
                                      when communicating with the backend.
                                    properties:
                                      version:
                                        description: |-
                                          Version of ProxyProtol
                                          Valid ProxyProtocolVersion values are
                                          "V1"
                                          "V2"
                                        enum:
                                        - V1
                                        - V2
                                        type: string
                                    required:
                                    - version
                                    type: object
                                  retry:
                                    description: |-
                                      Retry provides more advanced usage, allowing users to customize the number of retries, retry fallback strategy, and retry triggering conditions.
                                      If not set, retry will be disabled.
                                    properties:
                                      numAttemptsPerPriority:
                                        description: |-
                                          NumAttemptsPerPriority defines the number of requests (initial attempt + retries)
                                          that should be sent to the same priority before switching to a different one.
                                          If not specified or set to 0, all requests are sent to the highest priority that is healthy.
                                        format: int32
                                        type: integer
                                      numRetries:
                                        default: 2
                                        description: NumRetries is the number of retries
                                          to be attempted. Defaults to 2.
                                        format: int32
                                        minimum: 0
                                        type: integer
                                      perRetry:
                                        description: PerRetry is the retry policy
                                          to be applied per retry attempt.
                                        properties:
                                          backOff:
                                            description: |-
                                              Backoff is the backoff policy to be applied per retry attempt. gateway uses a fully jittered exponential
                                              back-off algorithm for retries. For additional details,
                                              see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-max-retries
                                            properties:
                                              baseInterval:
                                                description: BaseInterval is the base
                                                  interval between retries.
                                                pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                                type: string
                                              maxInterval:
                                                description: |-
                                                  MaxInterval is the maximum interval between retries. This parameter is optional, but must be greater than or equal to the base_interval if set.
                                                  The default is 10 times the base_interval
                                                pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                                type: string
                                            type: object
                                          timeout:
                                            description: Timeout is the timeout per
                                              retry attempt.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                        type: object
                                      retryOn:
                                        description: |-
                                          RetryOn specifies the retry trigger condition.

                                          If not specified, the default is to retry on connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes(503).
                                        properties:
                                          httpStatusCodes:
                                            description: |-
                                              HttpStatusCodes specifies the http status codes to be retried.
                                              The retriable-status-codes trigger must also be configured for these status codes to trigger a retry.
                                            items:
                                              description: HTTPStatus defines the
                                                http status code.
                                              maximum: 599
                                              minimum: 100
                                              type: integer
                                            type: array
                                          triggers:
                                            description: Triggers specifies the retry
                                              trigger condition(Http/Grpc).
                                            items:
                                              description: TriggerEnum specifies the
                                                conditions that trigger retries.
                                              enum:
                                              - 5xx
                                              - gateway-error
                                              - reset
                                              - reset-before-request
                                              - connect-failure
                                              - retriable-4xx
                                              - refused-stream
                                              - retriable-status-codes
                                              - cancelled
                                              - deadline-exceeded
                                              - internal
                                              - resource-exhausted
                                              - unavailable
                                              type: string
                                            type: array
                                        type: object
                                    type: object
                                  tcpKeepalive:
                                    description: |-
                                      TcpKeepalive settings associated with the upstream client connection.
                                      Disabled by default.
                                    properties:
                                      idleTime:
                                        description: |-
                                          The duration a connection needs to be idle before keep-alive
                                          probes start being sent.
                                          The duration format is
                                          Defaults to `7200s`.
                                        pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                        type: string
                                      interval:
                                        description: |-
                                          The duration between keep-alive probes.
                                          Defaults to `75s`.
                                        pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                        type: string
                                      probes:
                                        description: |-
                                          The total number of unacknowledged probes to send before deciding
                                          the connection is dead.
                                          Defaults to 9.
                                        format: int32
                                        type: integer
                                    type: object
                                  timeout:
                                    description: Timeout settings for the backend
                                      connections.
                                    properties:
                                      http:
                                        description: Timeout settings for HTTP.
                                        properties:
                                          connectionIdleTimeout:
                                            description: |-
                                              The idle timeout for an HTTP connection. Idle time is defined as a period in which there are no active requests in the connection.
                                              Default: 1 hour.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                          maxConnectionDuration:
                                            description: |-
                                              The maximum duration of an HTTP connection.
                                              Default: unlimited.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                          maxStreamDuration:
                                            description: |-
                                              MaxStreamDuration is the maximum duration for a stream to complete. This timeout measures the time
                                              from when the request is sent until the response stream is fully consumed and does not apply to
                                              non-streaming requests.
                                              When set to "0s", no max duration is applied and streams can run indefinitely.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                          requestTimeout:
                                            description: RequestTimeout is the time
                                              until which entire response is received
                                              from the upstream.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                        type: object
                                      tcp:
                                        description: Timeout settings for TCP.
                                        properties:
                                          connectTimeout:
                                            description: |-
                                              The timeout for network connection establishment, including TCP and TLS handshakes.
                                              Default: 10 seconds.
                                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                            type: string
                                        type: object
                                    type: object
                                type: object
                                x-kubernetes-validations:
                                - message: predictivePercent in preconnect policy
                                    only works with RoundRobin or Random load balancers
                                  rule: '!((has(self.connection) && has(self.connection.preconnect)
                                    && has(self.connection.preconnect.predictivePercent))
                                    && !(has(self.loadBalancer) && has(self.loadBalancer.type)
                                    && self.loadBalancer.type in [''Random'', ''RoundRobin'']))'
                              cacheDuration:
                                default: 300s
                                description: |-
                                  Duration is a string value representing a duration in time. The format is as specified
                                  in GEP-2257, a strict subset of the syntax parsed by Golang time.ParseDuration.
                                pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                type: string
                              uri:
                                description: |-
                                  URI is the HTTPS URI to fetch the JWKS. Envoy's system trust bundle is used to validate the server certificate.
                                  If a custom trust bundle is needed, it can be specified in a BackendTLSConfig resource and target the BackendRefs.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - uri
                            type: object
                            x-kubernetes-validations:
                            - message: BackendRefs must be used, backendRef is not
                                supported.
                              rule: '!has(self.backendRef)'
                            - message: Retry timeout is not supported.
                              rule: has(self.backendSettings)? (has(self.backendSettings.retry)?(has(self.backendSettings.retry.perRetry)?
                                !has(self.backendSettings.retry.perRetry.timeout):true):true):true
                            - message: HTTPStatusCodes is not supported.
                              rule: has(self.backendSettings)? (has(self.backendSettings.retry)?(has(self.backendSettings.retry.retryOn)?
                                !has(self.backendSettings.retry.retryOn.httpStatusCodes):true):true):true
                        type: object
                        x-kubernetes-validations:
                        - message: either remoteJWKS or localJWKS must be specified.
                          rule: has(self.remoteJWKS) || has(self.localJWKS)
                        - message: remoteJWKS and localJWKS cannot both be specified.
                          rule: '!(has(self.remoteJWKS) && has(self.localJWKS))'
                      protectedResourceMetadata:
                        description: |-
                          ProtectedResourceMetadata defines the OAuth 2.0 Resource Server Metadata as per RFC 8414.
                          This is used to expose the metadata endpoint for mcp clients to discover the authorization servers,
                          supported scopes, and JWKS URI.
                        properties:
                          resource:
                            description: |-
                              Resource is the identifier of the protected resource.
                              This should match the MCPRoute's URL. For example, if the MCPRoute's URL is
                              "https://api.example.com/mcp", the Resource should be "https://api.example.com/mcp".
                            format: uri
                            type: string
                          resourceDocumentation:
                            description: ResourceDocumentation is a URL that provides
                              human-readable documentation for the resource.
                            format: uri
                            type: string
                          resourceName:
                            description: ResourceName is a human-readable name for
                              the protected resource.
                            maxLength: 256
                            type: string
                          resourcePolicyUri:
                            description: ResourcePolicyURI is a URL that points to
                              the resource server's policy document.
                            format: uri
                            type: string
                          resourceSigningAlgValuesSupported:
                            description: |-
                              ResourceSigningAlgValuesSupported is a list of JWS signing algorithms supported by the resource server.
                              These algorithms are used in the "alg" field of the JOSE header in signed tokens.
                            items:
                              type: string
                            maxItems: 16
                            minItems: 1
                            type: array
                          scopesSupported:
                            description: ScopesSupported is a list of OAuth 2.0 scopes
                              that the resource server supports.
                            items:
                              type: string
                            maxItems: 32
                            type: array
                        required:
                        - resource
                        type: object
                    required:
                    - issuer
                    - protectedResourceMetadata
                    type: object
                type: object
            required:
            - backendRefs
            - parentRefs
            type: object
          status:
            description: Status defines the status details of the MCPRoute.
            properties:
              conditions:
                description: |-
                  Conditions is the list of conditions by the reconciliation result.
                  Currently, at most one condition is set.

                  Known .status.conditions.type are: "Accepted", "NotAccepted".
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

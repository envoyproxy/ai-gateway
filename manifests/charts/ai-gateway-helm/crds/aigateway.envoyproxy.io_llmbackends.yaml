---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: llmbackends.aigateway.envoyproxy.io
spec:
  group: aigateway.envoyproxy.io
  names:
    kind: LLMBackend
    listKind: LLMBackendList
    plural: llmbackends
    singular: llmbackend
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          LLMBackend is a resource that represents a single backend for LLMRoute.
          A backend is a service that handles traffic with a concrete API specification.

          A LLMBackend is "attached" to a Backend which is either a k8s Service or a Backend resource of the Envoy Gateway.

          When a backend with an attached LLMBackend is used as a routing target in the LLMRoute (more precisely, the
          HTTPRouteSpec defined in the LLMRoute), the ai-gateway will generate the necessary configuration to do
          the backend specific logic in the final HTTPRoute.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the details of the LLM policy.
            properties:
              backendRef:
                description: |-
                  BackendRef is the reference to the Backend resource that this LLMBackend corresponds to.

                  A backend can be of either k8s Service or Backend resource of Envoy Gateway.

                  This is required to be set.
                properties:
                  fallback:
                    description: |-
                      Fallback indicates whether the backend is designated as a fallback.
                      Multiple fallback backends can be configured.
                      It is highly recommended to configure active or passive health checks to ensure that failover can be detected
                      when the active backends become unhealthy and to automatically readjust once the primary backends are healthy again.
                      The overprovisioning factor is set to 1.4, meaning the fallback backends will only start receiving traffic when
                      the health of the active backends falls below 72%.
                    type: boolean
                  group:
                    default: ""
                    description: |-
                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                      When unspecified or empty string, core API group is inferred.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    default: Service
                    description: |-
                      Kind is the Kubernetes resource kind of the referent. For example
                      "Service".

                      Defaults to "Service" when not specified.

                      ExternalName services can refer to CNAME DNS records that may live
                      outside of the cluster and as such are difficult to reason about in
                      terms of conformance. They also may not be safe to forward to (see
                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                      support ExternalName Services.

                      Support: Core (Services with a type other than ExternalName)

                      Support: Implementation-specific (Services with type ExternalName)
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the referent.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the backend. When unspecified, the local
                      namespace is inferred.

                      Note that when a namespace different than the local namespace is specified,
                      a ReferenceGrant object is required in the referent namespace to allow that
                      namespace's owner to accept the reference. See the ReferenceGrant
                      documentation for details.

                      Support: Core
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  port:
                    description: |-
                      Port specifies the destination port number to use for this resource.
                      Port is required when the referent is a Kubernetes Service. In this
                      case, the port number is the service port number, not the target port.
                      For other resources, destination port might be derived from the referent
                      resource or this field.
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                required:
                - name
                type: object
                x-kubernetes-validations:
                - message: Must have port for Service reference
                  rule: '(size(self.group) == 0 && self.kind == ''Service'') ? has(self.port)
                    : true'
              outputSchema:
                description: |-
                  APISchema specifies the API schema of the output format of requests from
                  Envoy that this LLMBackend can accept as incoming requests.
                  Based on this schema, the ai-gateway will perform the necessary transformation for
                  the pair of LLMRouteSpec.APISchema and LLMBackendSpec.APISchema.

                  This is required to be set.
                properties:
                  schema:
                    description: Schema is the API schema of the LLMRoute or LLMBackend.
                    enum:
                    - OpenAI
                    - AWSBedrock
                    type: string
                  version:
                    description: Version is the version of the API schema.
                    type: string
                required:
                - schema
                type: object
            required:
            - backendRef
            - outputSchema
            type: object
        type: object
    served: true
    storage: true

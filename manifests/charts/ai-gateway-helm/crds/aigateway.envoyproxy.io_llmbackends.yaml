---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: llmbackends.aigateway.envoyproxy.io
spec:
  group: aigateway.envoyproxy.io
  names:
    kind: LLMBackend
    listKind: LLMBackendList
    plural: llmbackends
    singular: llmbackend
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          LLMBackend is a resource that represents a single backend for LLMRoute.
          A backend is a service that handles traffic with a concrete API specification.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the details of the LLM policy.
            properties:
              outputSchema:
                description: |-
                  APISchema specifies the API schema of the output that this LLMBackend can accept.
                  Based on this schema, the ai-gateway will perform the necessary transformation for
                  the pair of LLMRoute.APISchema and LLMBackend.APISchema.

                  This is required to be set.
                properties:
                  schema:
                    description: Schema is the API schema of the LLMRoute or LLMBackend.
                    enum:
                    - OpenAI
                    - AWSBedrock
                    type: string
                  version:
                    description: Version is the version of the API schema.
                    type: string
                required:
                - schema
                type: object
            required:
            - outputSchema
            type: object
        type: object
    served: true
    storage: true

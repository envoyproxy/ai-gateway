// Copyright Envoy AI Gateway Authors
// SPDX-License-Identifier: Apache-2.0
// The full text of the Apache license is available in the LICENSE file at
// the root of the repo.

// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/envoyproxy/ai-gateway/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// AIGatewayRoutes returns a AIGatewayRouteInformer.
	AIGatewayRoutes() AIGatewayRouteInformer
	// AIServiceBackends returns a AIServiceBackendInformer.
	AIServiceBackends() AIServiceBackendInformer
	// BackendSecurityPolicies returns a BackendSecurityPolicyInformer.
	BackendSecurityPolicies() BackendSecurityPolicyInformer
	// MCPRoutes returns a MCPRouteInformer.
	MCPRoutes() MCPRouteInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// AIGatewayRoutes returns a AIGatewayRouteInformer.
func (v *version) AIGatewayRoutes() AIGatewayRouteInformer {
	return &aIGatewayRouteInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// AIServiceBackends returns a AIServiceBackendInformer.
func (v *version) AIServiceBackends() AIServiceBackendInformer {
	return &aIServiceBackendInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// BackendSecurityPolicies returns a BackendSecurityPolicyInformer.
func (v *version) BackendSecurityPolicies() BackendSecurityPolicyInformer {
	return &backendSecurityPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// MCPRoutes returns a MCPRouteInformer.
func (v *version) MCPRoutes() MCPRouteInformer {
	return &mCPRouteInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
